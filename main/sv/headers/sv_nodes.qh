/*
battleMETAL 
Author: Peter Roohr
Date: 10/26/2020
Overview: 
  Ferris Bueller: what are you all still doing here? movies over...
    we're in overtime.
    
    nodegraph impl to get the bots to move very well.
*/

//AI NODEGRAPH system--------------------------------------------------------
/*
  1) ai_node_paths are placed in map editor
  2) export using quake C and precompute valid edges
  3) map load -> load nodegraph data
  4) Use the resulting data structure (ents? Arrays of ints?)
  5) To run a pathfinding algorithm in the AI
*/

float NODEGRAPH_LOADED;
float NODEGRAPH_MAX = 1024;
//Edge validation rules
float NODEGRAPH_DBG_ID1 = 6;
float NODEGRAPH_DBG_ID2 = 5;

float NODEGRAPH_EDGE_GRID = 32; // when checking edge links
float NODEGRAPH_EDGE_ANGLE_MAX = 315;
float NODEGRAPH_EDGE_ANGLE_MIN = 45;
float NODEGRAPH_EDGE_CHECK_CACHE[6];
entity NODEGRAPH_EXPORT_NODE[1024];


#pragma target dp
typedef struct
{
  float id;
  vector orig;
  float nodes[6];
  float edge[6];
} node_t;

node_t NODEGRAPH_DATA[1024];

vector NODEGRAPH_SEARCH_QUEUE[512];
float NODEGRAPH_MAX_REQUEST[6]; //how many ents can use the system at a time? needs refinement, but the point is to gate
                                  //this very costly code behind some limits.

/*vector NODEGRAPH_ORIGIN[1024];
float NODEGRAPH_EDGES1[1024];
float NODEGRAPH_EDGES2[1024];
float NODEGRAPH_EDGES3[1024];
float NODEGRAPH_EDGES4[1024];
float NODEGRAPH_EDGES5[1024];
float NODEGRAPH_EDGES6[1024];

float NODEGRAPH_EDGES_LEN1[1024];
float NODEGRAPH_EDGES_LEN2[1024];
float NODEGRAPH_EDGES_LEN3[1024];
float NODEGRAPH_EDGES_LEN4[1024];
float NODEGRAPH_EDGES_LEN5[1024];
float NODEGRAPH_EDGES_LEN6[1024];*/

float NODE_ID_COUNT;

//NODEGRAPH debugger--------------------------------------------------------
entity nodegraph_debugger;
void() nodegraph_debugger_th_node;
void() nodegraph_debugger_th_edge;
void() nodegraph_debug_graph;
//--------------

void(float nodeCount, float nodeId, vector org, string edgeDat) nodegraph_read_new_node;

//Export Nodegraph data
float( entity node, entity targNode ) world_nodegraph_export_edgelink;


void( vector start, vector end ) nodegraph_trace_route;

void( node_t aNode ) nodegraph_test;