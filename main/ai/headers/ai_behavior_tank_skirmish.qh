/*
battleMETAL 
Author: Peter Roohr
Date: 09/23/2019
Overview: 
  Header file for the tank_skirmish ai behavior set.
  Behaviors originally were all in one file, but these became unmaintainable.
  
  skirmish tanks are all MBT style tanks
*/

void() ai_tank_sk_die;
void() ai_tank_sk_die1;

/*
  Tank Macro Rebuild
*/
void() ai_tank_sk_stand1;
void() ai_tank_sk_patrol1;
void() ai_tank_sk_fight_prep;
void( entity attacker ) ai_tank_sk_react1;
/*
  rotate in place to self.ideal_yaw
*/
void() ai_tank_sk_rotate1;
void() ai_tank_sk_rotate2;
void() ai_tank_sk_rotate3;
void() ai_tank_sk_rotate4;
void() ai_tank_sk_rotate5;
void() ai_tank_sk_rotate6;
void() ai_tank_sk_rotate7;
void() ai_tank_sk_rotate8;
void() ai_tank_sk_rotate9;
void() ai_tank_sk_rotate10;

/*
  CHARGE
  self.ideal_yaw = enemy_yaw
  self.ai_dir = charge yaw
  self.lefty = 1 FORWARD || -1 BACKWARD
*/
void() ai_tank_sk_charge1;
void() ai_tank_sk_charge2;
void() ai_tank_sk_charge3;
void() ai_tank_sk_charge4;
void() ai_tank_sk_charge5;
void() ai_tank_sk_charge6;
void() ai_tank_sk_charge7;
void() ai_tank_sk_charge8;
void() ai_tank_sk_charge9;
void() ai_tank_sk_charge10;

/*
  tank attempts to move around the target
  can rotate in motion
  self.ai_dir setup before running this with the offset
  self.lefty = 1 LEFT || -1 RIGHT
*/
void() ai_tank_sk_flank1;
void() ai_tank_sk_flank2;
void() ai_tank_sk_flank3;
void() ai_tank_sk_flank4;
void() ai_tank_sk_flank5;
void() ai_tank_sk_flank6;
void() ai_tank_sk_flank7;
void() ai_tank_sk_flank8;
void() ai_tank_sk_flank9;
void() ai_tank_sk_flank10;

/*
  STRAFE
  self.ideal_yaw = 90deg to enemy_yaw
  self.ai_dir = self.ideal_yaw
  self.lefty = 1 LEFT || -1 RIGHT
*/
void() ai_tank_sk_strafe1;  //rotate to ideal_yaw, is loopable
void() ai_tank_sk_strafe2;  //move in direction of ideal_yaw
void() ai_tank_sk_strafe3;
void() ai_tank_sk_strafe4;
void() ai_tank_sk_strafe5;
void() ai_tank_sk_strafe6;
void() ai_tank_sk_strafe7;
void() ai_tank_sk_strafe8;

/*
  tank attempts to quickly turn around if enemy is behind it
*/
void() ai_tank_sk_juke1;
void() ai_tank_sk_juke2;
void() ai_tank_sk_juke3;
void() ai_tank_sk_juke4;
void() ai_tank_sk_juke5;
void() ai_tank_sk_juke6;
void() ai_tank_sk_juke7;
void() ai_tank_sk_juke8;
void() ai_tank_sk_juke9;
void() ai_tank_sk_juke10;

/*
  Less advanced tanks will attempt to reverse turn 
  to face a foe behind them
*/
void() ai_tank_sk_reverse1;
void() ai_tank_sk_reverse2;
void() ai_tank_sk_reverse3;
void() ai_tank_sk_reverse4;
void() ai_tank_sk_reverse5;
void() ai_tank_sk_reverse6;
void() ai_tank_sk_reverse7;
void() ai_tank_sk_reverse8;
void() ai_tank_sk_reverse9;
void() ai_tank_sk_reverse10;
void() ai_tank_sk_reverse11;
void() ai_tank_sk_reverse12;

/*
  hunting behavior
*/
void() ai_tank_sk_hunt1;
void() ai_tank_sk_hunt2;
void() ai_tank_sk_hunt3;
void() ai_tank_sk_hunt4;
void() ai_tank_sk_hunt5;
void() ai_tank_sk_hunt6;
void() ai_tank_sk_hunt7;
void() ai_tank_sk_hunt8;
void() ai_tank_sk_hunt9;
void() ai_tank_sk_hunt10;

/*
  th_pain == 'panic'
*/
void(entity attacker) ai_tank_sk_panic1;
void() ai_tank_sk_panic2;
void() ai_tank_sk_panic3;
void() ai_tank_sk_panic4;
void() ai_tank_sk_panic5;
void() ai_tank_sk_panic6;
void() ai_tank_sk_panic7;
void() ai_tank_sk_panic8;
void() ai_tank_sk_panic9;
void() ai_tank_sk_panic10;