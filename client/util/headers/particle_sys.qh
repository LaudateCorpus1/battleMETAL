/*
  battleMETAL
  Date: 9/6/2018
  Author: Peter Roohr
  Overview: client particle system header
*/

/*
  Fog fun
*/
float FOG_STATE;  //0 = no change, 1 = change
float FOG_DENSITY;
float FOG_RED;
float FOG_GREEN;
float FOG_BLUE;
float FOG_ALPHA;
float FOG_DIST_MIN;
float FOG_DIST_MAX;
float FOG_DIST_TOP;
float FOG_FADE_DEPTH;

float FOG_TARG_DENSITY;
float FOG_TARG_RED;
float FOG_TARG_GREEN;
float FOG_TARG_BLUE;
float FOG_TARG_ALPHA;
float FOG_TARG_DIST_MIN;
float FOG_TARG_DIST_MAX;
float FOG_TARG_DIST_TOP;
float FOG_TARG_FADE_DEPTH;

float( float fogColor, float fogColorTarg  ) cl_particles_fogColorAdjust;
float( float fogDist, float fogDistTarg ) cl_particles_fogDistAdjust;
void() cl_particles_fogFrame;

//Particle data
.float pcl_effectnum;
.vector pcl_velocity;
.float pcl_lifetime;
.float pcl_count;
.float pcl_fadeout; //time when debris starts to fade out

//===================================
void() te_shield_think={

  self.alpha = self.alpha - 0.3;
  self.angles = vectoangles( getpropertyvec(VF_ORIGIN) - self.origin );
  
  self.think = te_shield_think;
  if( self.alpha <= 0 ){
    self.alpha = 0;
    self.think = SUB_Remove;
  }

  self.nextthink = time + 0.01;
};

vector() te_read_vector;
vector() te_read_angle;

/*
  Debris chunks
*/
void() particle_debris_th;

void( vector org, vector vel, float chunkSize ) particle_debris;

/*
  Wreck event is when a unit is destroyed in combat.
  We send this event, and the client handles the entire presentation of it as much as possible.
*/
void() particle_vehicle_wreck_th;
void( float modelIndex, float skinNum, float lifetime, float vecSize, vector entOrg, vector entAngl ) particle_vehicle_wreck;

/*
  When a missile explodes...
*/
void() particle_missile_explode_th;
void( vector org, float explodeSize, vector explodeColor, float debrisCount, float debrType, float onShield ) particle_missile_explode;

/*
  When a mech piece is blown off;
*/
void() particle_mech_chunk_th;
void( float modelIndex, float skinNum, float vecSize, vector entOrg, vector entAngl ) particle_mech_chunk;
