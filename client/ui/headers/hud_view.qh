/*
battleMETAL
Author: Peter Roohr
Date: 2/17/2017
mod - 5/11/2017
mod - 9/15/2018
Overview: the interface for hud rendering
every hud ent has to implement this format
*/

//
string HUD_BLK_IMG_B;
string HUD_MTK_IMG_B;
string HUD_MNT_IMG_B;

//HUD CONSTANTS==============================
vector HUD_COLOR_DEF;
float HUD_UID_IMG_HELM      = 1;
float HUD_UID_ENERGY        = 2;
float HUD_UID_ARM_PLAYER    = 3;
float HUD_UID_SHIELD_PLAYER = 4;
float HUD_UID_ARM_TARGET    = 5;
float HUD_UID_SHIELD_TARGET = 6;
float HUD_UID_WEP_TYPE1     = 7;
float HUD_UID_WEP_TYPE2     = 8;
float HUD_UID_RADAR_TYPE1   = 9;
float HUD_UID_RADAR_TYPE2   = 10;
float HUD_UID_RADAR_GRAPH   = 11;
float HUD_UID_NAV           = 12;
float HUD_UID_TARGET_NAME   = 13;
float HUD_UID_TARGET_RANGE  = 14;
float HUD_UID_ARM_TARG_VEC  = 15;
float HUD_UID_ARM_TARG_BLD  = 16;
float HUD_UID_MESSAGE_BOX   = 17;
float HUD_UID_ENVIRO_BOX    = 18;
float HUD_UID_RAM_METER     = 19;
float HUD_UID_MSN_CLOCK     = 20;
//==========================================


//HUD GLOBALS===============================
  float HUD_ENERGY_ACTUAL;  //actual energy amount of player.
  
  vector RADAR_VORG;
  vector RADAR_ORG;
  vector RADAR_VCENTER;
  vector RADAR_VSIZE;
  
  float HUD_WARN_ON;
  float HUD_WARN_DIR;
  float HUD_WARN_MARK;
  float HUD_WARN_TIME = 2;
  
  float HUD_WARN_ENV_ON;
  float HUD_WARN_ENV_MARK;
  float HUD_WARN_ENV_TIME = 1;
  float HUD_WARN_ENV_TYPES;
  vector HUD_WARN_ENV_ORG;
  
  float HUD_INFO_ON;
  float HUD_INFO_MARK;
  float HUD_INFO_TIME = 1;
  vector HUD_INFO_ORG;
  vector HUD_INFO_SIZE;
  string HUD_INFO_MSG;
  
  float HUD_ALPHA_TIME;
  float HUD_ALPHA_RATE;
  float HUD_ALPHA_INC;
  
  vector HUD_LOCK_COLOR;
  float HUD_LOCK_STATE_PREV;
  float HUD_LOCK_ALPHA;
  float HUD_LOCK_ALPHA_RATE;
  float HUD_LOCK_SIZE;
  float HUD_LOCK_SIZE_RATE;
  float HUD_LOCK_TIME_START;
  float HUD_LOCK_TIME_END;
  float HUD_LOCK_STEP;  //timer step function
  float HUD_LOCK_STEP_RATE;
  
  float HUD_SHIELD_FLASH_ON;
  float HUD_SHIELD_FLASH_TIME;
  float HUD_SHIELD_FLASH;
  float HUD_SHIELD_FLASH_RATE = 0.15;
  
  float HUD_ZOOM_ACTIVE;
  
  string HUD_SPRINT_ON = "[EVASION ON]";
  string HUD_SPRINT_OFF = "!- EVASION OFFLINE -!";
  string HUD_SPRINT_RAM = "[RAM-SHOCKS READY]";
  
  float HUD_TACMAP_ON;
  float HUD_SCORES_ON;
  float HUD_SCORE_HEIGHT;
  float HUD_SCORE_SURVEST_HEIGHT;
  float HUD_SCORE_MILITAR_HEIGHT;
//==========================================

//HUD Text Data Arrays======================
float UI_DATA_UIDS[32]; // - primary key / table for hud objects
vector UI_DATA_POS[32];
vector UI_DATA_SIZE[32];
float UI_DATA_ALIGN[32];
float UI_DATA_LABEL_FLAG[32];
float UI_DATA_LABEL_ALIGN[32];
float UI_DATA_AXIS_FLAG[32];
vector UI_DATA_LABEL_OFS[32];
vector UI_DATA_COLOR1[32];
vector UI_DATA_COLOR2[32];
string UI_DATA_IMG[32]; //background image if needed
string UI_DATA_LABEL[32];
float UI_DATA_WEPBIT[32];
//==========================================

float HUD_PITCH_MIN;
float HUD_PITCH_MAX;

string HUT_RET_PIP_HRZ;
string HUT_RET_PIP_VRT;
string HUT_RET_LOK;
string HUD_RET_HIT;
string HUD_RAD_PIP_BLD;
string HUD_RAD_PIP_MCH;
string HUD_RAD_PIP_NAV;
string HUD_RAD_PIP_VEC;

string HUD_TRG_PIP_L;
string HUD_TRG_PIP_R;
string HUD_TRG_PIP_B;
string HUD_TRG_PIP_U;

string HUD_DMG_PIP_H;

string HUD_TARGET_BOX;
string HUD_TARGET_BOX_TL;
string HUD_TARGET_BOX_TR;
string HUD_TARGET_BOX_BR;
string HUD_TARGET_BOX_BL;

entity HUD_DATA_weapon;

void(float lockTime) hud_lock_control_start;
void() hud_lock_frame;

void() hud_renderCrosshairDisabled;
void(float hitdirection, float lockval, float unitAccuracy, float trg_shield) hud_renderCrosshairs;
void(float hitdirection, float lockval, float unitAccuracy, float trg_shield) hud_renderCrosshair1; //I have no regrets for these
void(float hitdirection, float lockval, float unitAccuracy, float trg_shield) hud_renderCrosshair2;
void(float hitdirection, float lockval, float unitAccuracy, float trg_shield) hud_renderCrosshair3;
void(float hitdirection, float lockval, float unitAccuracy, float trg_shield) hud_renderCrosshair4;
void(float hitdirection, float lockval, float unitAccuracy, float trg_shield) hud_renderCrosshair5;

void(float hitDirBit) hud_renderDirectionHit;
void(float targdir, float plrFaction, float trgfaction, float dattype) hud_renderTargetDirection;
void(vector pos, float algn) hud_renderPitchIndicator;
void(vector pos, float algn, float val) hud_renderReticleRange;
void(vector pos, float algn, vector angle) hud_renderNavHeading;
void(vector pos, float algn, float val, vector mSize, float bool_label, float lbl_algn, vector lbl_ofs, float meterAxis, float isClient) hud_renderShield;
void(vector pos, float algn, float val, vector mSize, float bool_label, float lbl_algn, vector lbl_ofs, float meterAxis) hud_renderEnergy;
void(vector grpCtr, vector pos, float val, vector mSize, float lbl_algn, vector lbl_ofs, float meterAxis, string label) hud_renderArmorMeter;
void(vector pos, float algn, float ct, float lt, float rt, float la, float ra, float lg) hud_renderArmorGraph;
void(vector vorg, float algn, float faction, vector radarOrg, float radarRange, float radarMode, vector siz) hud_renderRadar;
void(entity blip, float plrFaction, float radRange ) hud_renderRadarContact;
void(vector navOrg, float navState, float radRange ) hud_renderRadarNav;
void(vector torg, float algn, float status, float radius, float flag) hud_renderRadarStatus1;
void(vector torg, float algn, float status, float radius, float flag) hud_renderRadarStatus2;
void(vector pos, vector imgSz, float algn, float wepGrp, float w_id, float w_bit, float w_rel) hud_renderWeapon;
void(vector pos, vector imgSz, float algn, float wepGrp, float w_id, float w_bit, float w_rel) hud_renderWeapon2;
void(vector org, vector pos, float algn, float val, float radRange, float tsize, vector mSize, float meterAxis) hud_renderShieldOverlay;
void(vector org, vector pos, float algn, float faction1, float faction2, float radRange) hud_renderTargetOverlay;
void(vector pos, float algn, float flag) hud_render_missionClock;
void() hud_renderNavOverlay;
void(vector vorg, float algn, vector siz, float val) hud_renderArmorBuilding;
void(vector vorg, float algn, vector siz, float val)hud_renderArmorVehicle;
void(vector post, float e_size, float e_fact, float e_alpha) hud_RenderRadar_Mech;
void(vector post, float e_size, float e_fact, float e_alpha) hud_RenderRadar_Vehc;
void(vector post, float e_size, float e_fact, float e_alpha) hud_RenderRadar_Building;
void(vector post, float isOn, vector fac_clr) hud_RenderRadar_Nav;
void(vector ofs, vector torg, vector porg, float algn) hud_renderTargetRange;
void(vector ofs, float algn) hud_renderTargetName;
void() hud_renderRepairValue;
void(float warnOn, float warnDir) hud_render_warningBounds;
void(float warnOn, vector orgCenter, float dmgTypes, float labelAlpha) hud_render_warningEnvironment;
void(vector msgOrg, string messageVal, vector messageFont, float labelAlpha, float labelAlign) hud_render_message;
void(vector ramOrg, vector ramSize, float ramValue, float ramAlign, float meterAxis, vector lbl_ofs, float lbl_algn) hud_render_ram;
void( entity box ) hud_renderHighlight;
void() hud_renderHighlight_frame;
void() hud_render_sprint;
void( entity thePlayer ) hud_render_ally_names;
void(vector org, entity allyTarget, float algn, float faction1, float radRange) hud_renderTargetOverlay_Ally;

void() hud_render_tactical_map;
void() hud_render_scoreboard;
void( vector rowOfs, float itr, entity playerRow ) hud_render_score_row;
void( vector panelOfs ) hud_render_scoreboard_dm;
void( vector panelOfs ) hud_render_scoreboard_tdm;
void( vector panelOfs ) hud_render_scoreboard_coop;

void() hud_render_info;

//new text-based hud system
void( float uid, float targetId ) hud_data_renderTarget_Shield;
vector( float wbit ) hud_data_weapon_info;
void() data_hud_frame;